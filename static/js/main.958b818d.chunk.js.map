{"version":3,"sources":["fbinstance.js","components/AuthForm.js","routes/Auth.js","components/Chaweet.js","components/ChaweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Chaweet","chaweetObj","isOwner","editing","setEditing","text","newChaweet","setNewChaweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","downloadUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","ChaweetFactory","userObj","chaweet","setChaweet","fileUrl","setFileUrl","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","File","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","chaweets","setChaweets","useEffect","orderBy","onSnapshot","snapshot","chaweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.958b818d.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbinstance\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Log in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbinstance\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbinstance\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Chaweet = ({ chaweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newChaweet, setNewChaweet] = useState(chaweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure want to delete?\");\r\n    if (ok) {\r\n      await dbService.doc(`chaweets/${chaweetObj.id}`).delete();\r\n      await storageService.refFromURL(chaweetObj.downloadUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`chaweets/${chaweetObj.id}`).update({\r\n      text: newChaweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewChaweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              placeholder=\"Edit your chaweet\"\r\n              value={newChaweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Chaweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{chaweetObj.text}</h4>\r\n\r\n          {chaweetObj.downloadUrl && <img src={chaweetObj.downloadUrl} />}\r\n\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chaweet;\r\n","import { dbService, storageService } from \"fbinstance\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ChaweetFactory = ({ userObj }) => {\r\n  const [chaweet, setChaweet] = useState(\"\");\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (chaweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let downloadUrl = \"\";\r\n    if (fileUrl !== \"\") {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(fileUrl, \"data_url\");\r\n      downloadUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const chaweetObj = {\r\n      text: chaweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      downloadUrl,\r\n    };\r\n    await dbService.collection(\"chaweets\").add(chaweetObj);\r\n    setChaweet(\"\");\r\n    setFileUrl(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setChaweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const File = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setFileUrl(result);\r\n    };\r\n    reader.readAsDataURL(File);\r\n  };\r\n  const onClearFile = () => setFileUrl(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={chaweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n\r\n      {fileUrl && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={fileUrl}\r\n            style={{\r\n              backgroundImage: fileUrl,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearFile}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChaweetFactory;\r\n","import { dbService } from \"fbinstance\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Chaweet from \"components/Chaweet\";\r\nimport ChaweetFactory from \"components/ChaweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [chaweets, setChaweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"chaweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const chaweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setChaweets(chaweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ChaweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {chaweets.map((chaweet) => (\r\n          <Chaweet\r\n            key={chaweet.id}\r\n            chaweetObj={chaweet}\r\n            isOwner={chaweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbinstance\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbinstance\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return init ? (\n    <AppRouter\n      refreshUser={refreshUser}\n      isLoggedIn={isLoggedIn}\n      userObj={userObj}\n    />\n  ) : (\n    \"initializing...\"\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}